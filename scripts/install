# This is a an install script which will rebuild all the docker containers and
# fire them all up.
#
# Use install script when:
#     - You want to rebuild the containers from scratch
#     - You have made changes to a Dockerfile and want to see them.


#!/bin/sh

#### OPTION HANDLING ####
# A POSIX variable
OPTIND=1        # Reset in case getopts has been used previously in the shell.
ENVS="db daoserver webserver"

DOCKER_IMAGE="" # use Docker image instead of build. Only used if len(ENVS) = 1
while getopts ":i:" opt; do
    case $opt in
        i)
            DOCKER_IMAGE=$OPTARG
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;
  esac
done

shift $((OPTIND -1))

if [[ $# -ne 0 ]]
    then
    ENVS="$@"
fi
if [[ -n "$DOCKER_IMAGE" && $# -ne 1 ]]
    then
    echo "Invalid option: Image file and multiple environments" >&2
    exit 1
fi

# If the user 
if [[ $# -ne 1 ]]
    then
    DOCKER_IMAGE=""
fi


# Turn off existing
for ENV in $ENVS
do
    sudo docker kill $ENV
    sudo docker rm -v $ENV
done


# Build replacements
if [ -z "$DOCKER_IMAGE" ]
    then
    echo 'dfsfdsfsdfsdf'
    for ENV in $ENVS
    do
        case $ENV in
            db)
                pushd database
                sudo docker build -t db_image .
                popd
            ;;
            daoserver)
                pushd daoserver
                sudo docker build -t dao_img .
                popd
            ;;
            webserver)
                pushd webserver
                sudo docker build -t web_img .
                popd
            ;;
            *)
            # unknown option
            ;;
        esac
    done
fi


# Turn on replacements
for ENV in $ENVS
do
    case $ENV in
        db)
            [[ -n "$DOCKER_IMAGE" ]] && IMAGE=$DOCKER_IMAGE || IMAGE="db_image"
            rm -f database/env_file
            python -u scripts/make_db_env_file.py
            docker run --env-file=database/env_file -d -P --name db $IMAGE
            rm -f database/env_file
            sleep 10    # wait for db to finish startup
        ;;
        daoserver)
            [[ -n "$DOCKER_IMAGE" ]] && IMAGE=$DOCKER_IMAGE || IMAGE="dao_img"
            rm -f daoserver/env_file
            python -u scripts/make_daoserver_env_file.py
            docker run --env-file=daoserver/env_file --name=daoserver -d -p 5001:5000 --link=db $IMAGE
            rm -f daoserver/env_file
        ;;
        webserver)
            [[ -n "$DOCKER_IMAGE" ]] && IMAGE=$DOCKER_IMAGE || IMAGE="web_img"
            rm -f webserver/env_file
            python -u scripts/make_webserver_env_file.py
            sudo docker run --env-file=webserver/env_file --name=webserver --env ROOT_PASSWORD=root -d -p 5000:8000 --link=db --link=daoserver $IMAGE
            rm -f webserver/env_file
            sleep 5
        ;;
        *)
        # unknown option
        ;;
    esac
done

exit
